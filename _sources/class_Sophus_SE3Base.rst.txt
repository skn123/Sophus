.. index:: pair: class; Sophus::SE3Base
.. _doxid-class_sophus_1_1_s_e3_base:

template class Sophus::SE3Base
==============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

:ref:`SE3 <doxid-class_sophus_1_1_s_e3>` base type - implements :ref:`SE3 <doxid-class_sophus_1_1_s_e3>` class but is storage agnostic. :ref:`More...<details-class_sophus_1_1_s_e3_base>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <se3.hpp>
	
	template <class Derived>
	class SE3Base {
	public:
		// typedefs
	
		using :target:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>` = typename Eigen::internal::traits<Derived>:::ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>` ;
		using :target:`TranslationType<doxid-class_sophus_1_1_s_e3_base_1ab0520404000f2ee629d8ac2dd8ddada1>` = typename Eigen::internal::traits<Derived>:::ref:`TranslationType<doxid-class_sophus_1_1_s_e3_base_1ab0520404000f2ee629d8ac2dd8ddada1>` ;
		using :target:`SO3Type<doxid-class_sophus_1_1_s_e3_base_1a232c57d92aa0c98354cb12fa66c78b5b>` = typename Eigen::internal::traits<Derived>:::ref:`SO3Type<doxid-class_sophus_1_1_s_e3_base_1a232c57d92aa0c98354cb12fa66c78b5b>` ;
		using :target:`QuaternionType<doxid-class_sophus_1_1_s_e3_base_1aabe323736d5152ef96473a84296d248b>` = typename SO3Type::QuaternionType ;
		using :target:`Transformation<doxid-class_sophus_1_1_s_e3_base_1a75e30f1b9419c7e722ef6b5aec1d6746>` = :ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, :ref:`N<doxid-class_sophus_1_1_s_e3_base_1ac3e6d2440d5bcf63f9e1bfda254d40de>`, :ref:`N<doxid-class_sophus_1_1_s_e3_base_1ac3e6d2440d5bcf63f9e1bfda254d40de>`> ;
		using :target:`Point<doxid-class_sophus_1_1_s_e3_base_1ac89231a4c460d6a84b2ad2373cba7de3>` = :ref:`Vector3<doxid-namespace_sophus_1ade8af1bfa6ef21fdd15e6a3a89929be5>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> ;
		using :target:`HomogeneousPoint<doxid-class_sophus_1_1_s_e3_base_1a200886227409d1749c374571ab1254be>` = :ref:`Vector4<doxid-namespace_sophus_1a2f54b15372bfd1bb0c34464ad61a77c6>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> ;
		using :target:`Line<doxid-class_sophus_1_1_s_e3_base_1ab778a19f6bd175a1f34d3e46978c11a1>` = :ref:`ParametrizedLine3<doxid-namespace_sophus_1a24633b90a69ca83ad90d833e11e59dd9>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> ;
		using :target:`Hyperplane<doxid-class_sophus_1_1_s_e3_base_1a8cc1eee16867c96921b630f38651232a>` = :ref:`Hyperplane3<doxid-namespace_sophus_1ab084f0123710bbef2c90302d40497a74>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> ;
		using :target:`Tangent<doxid-class_sophus_1_1_s_e3_base_1ad244e90ba57d543113905b7e29a4e105>` = :ref:`Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, :ref:`DoF<doxid-class_sophus_1_1_s_e3_base_1a185c5b140a0815351de44c4ea5d89103>`> ;
		using :target:`Adjoint<doxid-class_sophus_1_1_s_e3_base_1afdac4e5cb9626d235247a16a18b8d3c9>` = :ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, :ref:`DoF<doxid-class_sophus_1_1_s_e3_base_1a185c5b140a0815351de44c4ea5d89103>`, :ref:`DoF<doxid-class_sophus_1_1_s_e3_base_1a185c5b140a0815351de44c4ea5d89103>`> ;
		using :ref:`ReturnScalar<doxid-class_sophus_1_1_s_e3_base_1a6fc973b48bda3160055cb02cd5262551>` = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, typename OtherDerived::Scalar>::ReturnType ;
		using :target:`SE3Product<doxid-class_sophus_1_1_s_e3_base_1af2b8edde2888dbd467b44058cc159181>` = :ref:`SE3<doxid-class_sophus_1_1_s_e3>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_s_e3_base_1a6fc973b48bda3160055cb02cd5262551>`<OtherDerived>> ;
		using :target:`PointProduct<doxid-class_sophus_1_1_s_e3_base_1ae0c228d4cebb05213dd8848dd9f602c3>` = :ref:`Vector3<doxid-namespace_sophus_1ade8af1bfa6ef21fdd15e6a3a89929be5>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_s_e3_base_1a6fc973b48bda3160055cb02cd5262551>`<PointDerived>> ;
		using :target:`HomogeneousPointProduct<doxid-class_sophus_1_1_s_e3_base_1a73615ebcbd9b006a2ba68ea39753de5c>` = :ref:`Vector4<doxid-namespace_sophus_1a2f54b15372bfd1bb0c34464ad61a77c6>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_s_e3_base_1a6fc973b48bda3160055cb02cd5262551>`<HPointDerived>> ;

		// fields
	
		static constexpr int :ref:`DoF<doxid-class_sophus_1_1_s_e3_base_1a185c5b140a0815351de44c4ea5d89103>` = 6;
		static constexpr int :ref:`num_parameters<doxid-class_sophus_1_1_s_e3_base_1ac0ee11a7faadafa313b906270cee545b>` = 7;
		static constexpr int :ref:`N<doxid-class_sophus_1_1_s_e3_base_1ac3e6d2440d5bcf63f9e1bfda254d40de>` = 4;

		// methods
	
		:ref:`Adjoint<doxid-class_sophus_1_1_s_e3_base_1afdac4e5cb9626d235247a16a18b8d3c9>` :ref:`Adj<doxid-class_sophus_1_1_s_e3_base_1a4e7bbc419552d6f3d7ae1a07cb22d69d>`() const;
		:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>` :ref:`angleX<doxid-class_sophus_1_1_s_e3_base_1ad35cca0635dcaf9e2f485dfc3aaf6adc>`() const;
		:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>` :ref:`angleY<doxid-class_sophus_1_1_s_e3_base_1af8656241b12503f6e9ceafd327abbe20>`() const;
		:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>` :ref:`angleZ<doxid-class_sophus_1_1_s_e3_base_1a43a0d2c85dcb4ce33c1cc458f44bf0af>`() const;
	
		template <class NewScalarType>
		:ref:`SE3<doxid-class_sophus_1_1_s_e3>`<NewScalarType> :ref:`cast<doxid-class_sophus_1_1_s_e3_base_1acb9440dca0877102eb3cde1d0aa79035>`() const;
	
		:ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, :ref:`num_parameters<doxid-class_sophus_1_1_s_e3_base_1ac0ee11a7faadafa313b906270cee545b>`, :ref:`DoF<doxid-class_sophus_1_1_s_e3_base_1a185c5b140a0815351de44c4ea5d89103>`> :ref:`Dx_this_mul_exp_x_at_0<doxid-class_sophus_1_1_s_e3_base_1a1104d6ab18ccc69a6f5d031c2e767731>`() const;
		:ref:`SE3<doxid-class_sophus_1_1_s_e3>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> :ref:`inverse<doxid-class_sophus_1_1_s_e3_base_1ad5356ba502dd3c15e2513cf459d498e9>`() const;
		:ref:`Tangent<doxid-class_sophus_1_1_s_e3_base_1ad244e90ba57d543113905b7e29a4e105>` :ref:`log<doxid-class_sophus_1_1_s_e3_base_1a97d84dd32d7d023a03f05a74da6377d8>`() const;
		void :ref:`normalize<doxid-class_sophus_1_1_s_e3_base_1a33626101e4eef59db31ea8a1dee9d590>`();
		:ref:`Transformation<doxid-class_sophus_1_1_s_e3_base_1a75e30f1b9419c7e722ef6b5aec1d6746>` :ref:`matrix<doxid-class_sophus_1_1_s_e3_base_1a8149537ee69c807461d0a29e4afcfbdd>`() const;
		:ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, 3, 4> :ref:`matrix3x4<doxid-class_sophus_1_1_s_e3_base_1a24c0a523ef514813de78965fb66d58dd>`() const;
	
		template <class OtherDerived>
		SE3Base<Derived>& :ref:`operator=<doxid-class_sophus_1_1_s_e3_base_1a22b3c6622abc80ae64ce2f15d3751208>`(SE3Base<OtherDerived> const& other);
	
		template <typename OtherDerived>
		:ref:`SE3Product<doxid-class_sophus_1_1_s_e3_base_1af2b8edde2888dbd467b44058cc159181>`<OtherDerived> :ref:`operator*<doxid-class_sophus_1_1_s_e3_base_1a508f481f4620bb03c9964776f48c7301>`(SE3Base<OtherDerived> const& other) const;
	
		template <
			typename PointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 3>::value>::type
			>
		:ref:`PointProduct<doxid-class_sophus_1_1_s_e3_base_1ae0c228d4cebb05213dd8848dd9f602c3>`<PointDerived> :ref:`operator*<doxid-class_sophus_1_1_s_e3_base_1abad26b7d002e6c44939d37da76bad5c9>`(Eigen::MatrixBase<PointDerived> const& p) const;
	
		template <
			typename HPointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 4>::value>::type
			>
		:ref:`HomogeneousPointProduct<doxid-class_sophus_1_1_s_e3_base_1a73615ebcbd9b006a2ba68ea39753de5c>`<HPointDerived> :ref:`operator*<doxid-class_sophus_1_1_s_e3_base_1a060e19c3376fa36119d8c9bcc8edb244>`(Eigen::MatrixBase<HPointDerived> const& p) const;
	
		:ref:`Line<doxid-class_sophus_1_1_s_e3_base_1ab778a19f6bd175a1f34d3e46978c11a1>` :ref:`operator*<doxid-class_sophus_1_1_s_e3_base_1a4661783faa317e804dfe3fd78fd321f6>`(:ref:`Line<doxid-class_sophus_1_1_s_e3_base_1ab778a19f6bd175a1f34d3e46978c11a1>` const& l) const;
		:ref:`Hyperplane<doxid-class_sophus_1_1_s_e3_base_1a8cc1eee16867c96921b630f38651232a>` :ref:`operator*<doxid-class_sophus_1_1_s_e3_base_1aee0f9b524cb647b0cc67c9677edda66a>`(:ref:`Hyperplane<doxid-class_sophus_1_1_s_e3_base_1a8cc1eee16867c96921b630f38651232a>` const& p) const;
	
		template <
			typename OtherDerived,
			typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
			>
		SE3Base<Derived>& :ref:`operator*=<doxid-class_sophus_1_1_s_e3_base_1a5ee0f34cbbcf283c80d7de4d3c34f335>`(SE3Base<OtherDerived> const& other);
	
		:ref:`Matrix3<doxid-namespace_sophus_1a480d3dfd742f398b9e6244acd2591b39>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> :ref:`rotationMatrix<doxid-class_sophus_1_1_s_e3_base_1ad50dcbbb857ed69e59ee36c28ff05e04>`() const;
		:ref:`SO3Type<doxid-class_sophus_1_1_s_e3_base_1a232c57d92aa0c98354cb12fa66c78b5b>`& :ref:`so3<doxid-class_sophus_1_1_s_e3_base_1a853b17d9c41d6dfc6740e357df68fa12>`();
		:ref:`SO3Type<doxid-class_sophus_1_1_s_e3_base_1a232c57d92aa0c98354cb12fa66c78b5b>` const& :ref:`so3<doxid-class_sophus_1_1_s_e3_base_1a7313b91a200d77fb64f66103e57661e9>`() const;
		void :ref:`setQuaternion<doxid-class_sophus_1_1_s_e3_base_1adf0c3e64921faca2cde721141e813740>`(Eigen::Quaternion<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> const& quat);
		void :ref:`setRotationMatrix<doxid-class_sophus_1_1_s_e3_base_1af0e13f3b8155eefef864182d7222a639>`(:ref:`Matrix3<doxid-namespace_sophus_1a480d3dfd742f398b9e6244acd2591b39>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> const& R);
		:ref:`Sophus::Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, :ref:`num_parameters<doxid-class_sophus_1_1_s_e3_base_1ac0ee11a7faadafa313b906270cee545b>`> :ref:`params<doxid-class_sophus_1_1_s_e3_base_1a6285c9e7a381e93e41c4d21e67e35ab8>`() const;
		:ref:`TranslationType<doxid-class_sophus_1_1_s_e3_base_1ab0520404000f2ee629d8ac2dd8ddada1>`& :ref:`translation<doxid-class_sophus_1_1_s_e3_base_1af355658de9c9c32c588417ba26ed285a>`();
		:ref:`TranslationType<doxid-class_sophus_1_1_s_e3_base_1ab0520404000f2ee629d8ac2dd8ddada1>` const& :ref:`translation<doxid-class_sophus_1_1_s_e3_base_1a81b5183db43f6203bfe07d4d00d87249>`() const;
		:ref:`QuaternionType<doxid-class_sophus_1_1_s_e3_base_1aabe323736d5152ef96473a84296d248b>` const& :ref:`unit_quaternion<doxid-class_sophus_1_1_s_e3_base_1a2633e8245de91f863b4adf513c496f7b>`() const;
	};

	// direct descendants

	template <class Scalar_, int Options>
	class :ref:`Map<Sophus::SE3<Scalar_> const, Options><doxid-class_eigen_1_1_map_3_01_sophus_1_1_s_e3_3_01_scalar___01_4_01const_00_01_options_01_4>`;

	template <class Scalar_, int Options>
	class :ref:`Map<Sophus::SE3<Scalar_>, Options><doxid-class_eigen_1_1_map_3_01_sophus_1_1_s_e3_3_01_scalar___01_4_00_01_options_01_4>`;
.. _details-class_sophus_1_1_s_e3_base:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`SE3 <doxid-class_sophus_1_1_s_e3>` base type - implements :ref:`SE3 <doxid-class_sophus_1_1_s_e3>` class but is storage agnostic.

SE(3) is the group of rotations and translation in 3d. It is the semi-direct product of SO(3) and the 3d Euclidean vector space. The class is represented using a composition of :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` for rotation and a one 3-vector for translation.

SE(3) is neither compact, nor a commutative group.

See :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` for more details of the rotation representation in 3d.

Typedefs
--------

.. index:: pair: typedef; ReturnScalar
.. _doxid-class_sophus_1_1_s_e3_base_1a6fc973b48bda3160055cb02cd5262551:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	using ReturnScalar = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, typename OtherDerived::Scalar>::ReturnType 

For binary operations the return type is determined with the ScalarBinaryOpTraits feature of :ref:`Eigen <doxid-namespace_eigen>`. This allows mixing concrete and Map types, as well as other compatible scalar types such as Ceres::Jet and double scalars with :ref:`SE3 <doxid-class_sophus_1_1_s_e3>` operations.

Fields
------

.. index:: pair: variable; DoF
.. _doxid-class_sophus_1_1_s_e3_base_1a185c5b140a0815351de44c4ea5d89103:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int DoF = 6

Degrees of freedom of manifold, number of dimensions in tangent space (three for translation, three for rotation).

.. index:: pair: variable; num_parameters
.. _doxid-class_sophus_1_1_s_e3_base_1ac0ee11a7faadafa313b906270cee545b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int num_parameters = 7

Number of internal parameters used (4-tuple for quaternion, three for translation).

.. index:: pair: variable; N
.. _doxid-class_sophus_1_1_s_e3_base_1ac3e6d2440d5bcf63f9e1bfda254d40de:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int N = 4

Group transformations are 4x4 matrices.

Methods
-------

.. index:: pair: function; Adj
.. _doxid-class_sophus_1_1_s_e3_base_1a4e7bbc419552d6f3d7ae1a07cb22d69d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Adjoint<doxid-class_sophus_1_1_s_e3_base_1afdac4e5cb9626d235247a16a18b8d3c9>` Adj() const

Adjoint transformation.

This function return the adjoint transformation ``Ad`` of the group element ``A`` such that for all ``x`` it holds that ``hat(Ad_A * x) = A * hat(x) A^{-1}``. See hat-operator below.

.. index:: pair: function; angleX
.. _doxid-class_sophus_1_1_s_e3_base_1ad35cca0635dcaf9e2f485dfc3aaf6adc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>` angleX() const

Extract rotation angle about canonical X-axis.

.. index:: pair: function; angleY
.. _doxid-class_sophus_1_1_s_e3_base_1af8656241b12503f6e9ceafd327abbe20:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>` angleY() const

Extract rotation angle about canonical Y-axis.

.. index:: pair: function; angleZ
.. _doxid-class_sophus_1_1_s_e3_base_1a43a0d2c85dcb4ce33c1cc458f44bf0af:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>` angleZ() const

Extract rotation angle about canonical Z-axis.

.. index:: pair: function; cast
.. _doxid-class_sophus_1_1_s_e3_base_1acb9440dca0877102eb3cde1d0aa79035:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class NewScalarType>
	:ref:`SE3<doxid-class_sophus_1_1_s_e3>`<NewScalarType> cast() const

Returns copy of instance casted to NewScalarType.

.. index:: pair: function; Dx_this_mul_exp_x_at_0
.. _doxid-class_sophus_1_1_s_e3_base_1a1104d6ab18ccc69a6f5d031c2e767731:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, :ref:`num_parameters<doxid-class_sophus_1_1_s_e3_base_1ac0ee11a7faadafa313b906270cee545b>`, :ref:`DoF<doxid-class_sophus_1_1_s_e3_base_1a185c5b140a0815351de44c4ea5d89103>`> Dx_this_mul_exp_x_at_0() const

Returns derivative of this \* exp(x) wrt x at x=0.

.. index:: pair: function; inverse
.. _doxid-class_sophus_1_1_s_e3_base_1ad5356ba502dd3c15e2513cf459d498e9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SE3<doxid-class_sophus_1_1_s_e3>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> inverse() const

Returns group inverse.

.. index:: pair: function; log
.. _doxid-class_sophus_1_1_s_e3_base_1a97d84dd32d7d023a03f05a74da6377d8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Tangent<doxid-class_sophus_1_1_s_e3_base_1ad244e90ba57d543113905b7e29a4e105>` log() const

Logarithmic map.

Computes the logarithm, the inverse of the group exponential which maps element of the group (rigid body transformations) to elements of the tangent space (twist).

To be specific, this function computes ``vee(logmat(.))`` with ``logmat(.)`` being the matrix logarithm and ``vee(.)`` the vee-operator of SE(3).

.. index:: pair: function; normalize
.. _doxid-class_sophus_1_1_s_e3_base_1a33626101e4eef59db31ea8a1dee9d590:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void normalize()

It re-normalizes the :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` element.

Note: Because of the class invariant of :ref:`SO3 <doxid-class_sophus_1_1_s_o3>`, there is typically no need to call this function directly.

.. index:: pair: function; matrix
.. _doxid-class_sophus_1_1_s_e3_base_1a8149537ee69c807461d0a29e4afcfbdd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Transformation<doxid-class_sophus_1_1_s_e3_base_1a75e30f1b9419c7e722ef6b5aec1d6746>` matrix() const

Returns 4x4 matrix representation of the instance.

It has the following form:

\| R t \| \| o 1 \|

where ``R`` is a 3x3 rotation matrix, ``t`` a translation 3-vector and ``o`` a 3-column vector of zeros.

.. index:: pair: function; matrix3x4
.. _doxid-class_sophus_1_1_s_e3_base_1a24c0a523ef514813de78965fb66d58dd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, 3, 4> matrix3x4() const

Returns the significant first three rows of the matrix above.

.. index:: pair: function; operator=
.. _doxid-class_sophus_1_1_s_e3_base_1a22b3c6622abc80ae64ce2f15d3751208:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class OtherDerived>
	SE3Base<Derived>& operator=(SE3Base<OtherDerived> const& other)

Assignment-like operator from OtherDerived.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_e3_base_1a508f481f4620bb03c9964776f48c7301:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename OtherDerived>
	:ref:`SE3Product<doxid-class_sophus_1_1_s_e3_base_1af2b8edde2888dbd467b44058cc159181>`<OtherDerived> operator*(SE3Base<OtherDerived> const& other) const

Group multiplication, which is rotation concatenation.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_e3_base_1abad26b7d002e6c44939d37da76bad5c9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename PointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 3>::value>::type
		>
	:ref:`PointProduct<doxid-class_sophus_1_1_s_e3_base_1ae0c228d4cebb05213dd8848dd9f602c3>`<PointDerived> operator*(Eigen::MatrixBase<PointDerived> const& p) const

Group action on 3-points.

This function rotates and translates a three dimensional point ``p`` by the SE(3) element ``bar_T_foo = (bar_R_foo, t_bar)`` (= rigid body transformation):

``p_bar = bar_R_foo * p_foo + t_bar``.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_e3_base_1a060e19c3376fa36119d8c9bcc8edb244:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename HPointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 4>::value>::type
		>
	:ref:`HomogeneousPointProduct<doxid-class_sophus_1_1_s_e3_base_1a73615ebcbd9b006a2ba68ea39753de5c>`<HPointDerived> operator*(Eigen::MatrixBase<HPointDerived> const& p) const

Group action on homogeneous 3-points. See above for more details.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_e3_base_1a4661783faa317e804dfe3fd78fd321f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Line<doxid-class_sophus_1_1_s_e3_base_1ab778a19f6bd175a1f34d3e46978c11a1>` operator*(:ref:`Line<doxid-class_sophus_1_1_s_e3_base_1ab778a19f6bd175a1f34d3e46978c11a1>` const& l) const

Group action on lines.

This function rotates and translates a parametrized line ``l(t) = o + t * d`` by the SE(3) element:

Origin is transformed using SE(3) action Direction is transformed using rotation part

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_e3_base_1aee0f9b524cb647b0cc67c9677edda66a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Hyperplane<doxid-class_sophus_1_1_s_e3_base_1a8cc1eee16867c96921b630f38651232a>` operator*(:ref:`Hyperplane<doxid-class_sophus_1_1_s_e3_base_1a8cc1eee16867c96921b630f38651232a>` const& p) const

Group action on planes.

This function rotates and translates a plane ``n.x + d = 0`` by the SE(3) element:

Normal vector ``n`` is rotated Offset ``d`` is adjusted for translation

.. index:: pair: function; operator*=
.. _doxid-class_sophus_1_1_s_e3_base_1a5ee0f34cbbcf283c80d7de4d3c34f335:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename OtherDerived,
		typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
		>
	SE3Base<Derived>& operator*=(SE3Base<OtherDerived> const& other)

In-place group multiplication. This method is only valid if the return type of the multiplication is compatible with this :ref:`SE3 <doxid-class_sophus_1_1_s_e3>` 's Scalar type.

.. index:: pair: function; rotationMatrix
.. _doxid-class_sophus_1_1_s_e3_base_1ad50dcbbb857ed69e59ee36c28ff05e04:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Matrix3<doxid-namespace_sophus_1a480d3dfd742f398b9e6244acd2591b39>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> rotationMatrix() const

Returns rotation matrix.

.. index:: pair: function; so3
.. _doxid-class_sophus_1_1_s_e3_base_1a853b17d9c41d6dfc6740e357df68fa12:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SO3Type<doxid-class_sophus_1_1_s_e3_base_1a232c57d92aa0c98354cb12fa66c78b5b>`& so3()

Mutator of :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` group.

.. index:: pair: function; so3
.. _doxid-class_sophus_1_1_s_e3_base_1a7313b91a200d77fb64f66103e57661e9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SO3Type<doxid-class_sophus_1_1_s_e3_base_1a232c57d92aa0c98354cb12fa66c78b5b>` const& so3() const

Accessor of :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` group.

.. index:: pair: function; setQuaternion
.. _doxid-class_sophus_1_1_s_e3_base_1adf0c3e64921faca2cde721141e813740:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setQuaternion(Eigen::Quaternion<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> const& quat)

Takes in quaternion, and normalizes it.

Precondition: The quaternion must not be close to zero.

.. index:: pair: function; setRotationMatrix
.. _doxid-class_sophus_1_1_s_e3_base_1af0e13f3b8155eefef864182d7222a639:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setRotationMatrix(:ref:`Matrix3<doxid-namespace_sophus_1a480d3dfd742f398b9e6244acd2591b39>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`> const& R)

Sets ``so3`` using ``rotation_matrix``.

Precondition: ``R`` must be orthogonal and ``det(R)=1``.

.. index:: pair: function; params
.. _doxid-class_sophus_1_1_s_e3_base_1a6285c9e7a381e93e41c4d21e67e35ab8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Sophus::Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_s_e3_base_1a3eb701512103dc1c78d6b6e58d70a5b9>`, :ref:`num_parameters<doxid-class_sophus_1_1_s_e3_base_1ac0ee11a7faadafa313b906270cee545b>`> params() const

Returns internal parameters of SE(3).

It returns (q.imag[0], q.imag[1], q.imag[2], q.real, t[0], t[1], t[2]), with q being the unit quaternion, t the translation 3-vector.

.. index:: pair: function; translation
.. _doxid-class_sophus_1_1_s_e3_base_1af355658de9c9c32c588417ba26ed285a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TranslationType<doxid-class_sophus_1_1_s_e3_base_1ab0520404000f2ee629d8ac2dd8ddada1>`& translation()

Mutator of translation vector.

.. index:: pair: function; translation
.. _doxid-class_sophus_1_1_s_e3_base_1a81b5183db43f6203bfe07d4d00d87249:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TranslationType<doxid-class_sophus_1_1_s_e3_base_1ab0520404000f2ee629d8ac2dd8ddada1>` const& translation() const

Accessor of translation vector.

.. index:: pair: function; unit_quaternion
.. _doxid-class_sophus_1_1_s_e3_base_1a2633e8245de91f863b4adf513c496f7b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`QuaternionType<doxid-class_sophus_1_1_s_e3_base_1aabe323736d5152ef96473a84296d248b>` const& unit_quaternion() const

Accessor of unit quaternion.

