.. index:: pair: class; Sophus::SO3Base
.. _doxid-class_sophus_1_1_s_o3_base:

template class Sophus::SO3Base
==============================

.. toctree::
	:hidden:

	struct_Sophus_SO3Base_TangentAndTheta.rst

Overview
~~~~~~~~

:ref:`SO3 <doxid-class_sophus_1_1_s_o3>` base type - implements :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` class but is storage agnostic. :ref:`More...<details-class_sophus_1_1_s_o3_base>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <so3.hpp>
	
	template <class Derived>
	class SO3Base {
	public:
		// typedefs
	
		using :target:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>` = typename Eigen::internal::traits<Derived>:::ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>` ;
		using :target:`QuaternionType<doxid-class_sophus_1_1_s_o3_base_1a1e370b275fb63d7c870f2d186a501689>` = typename Eigen::internal::traits<Derived>:::ref:`QuaternionType<doxid-class_sophus_1_1_s_o3_base_1a1e370b275fb63d7c870f2d186a501689>` ;
		using :target:`QuaternionTemporaryType<doxid-class_sophus_1_1_s_o3_base_1ab704dfb55ecf27a8ee29669581c6f5d7>` = Eigen::Quaternion<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, :ref:`Options<doxid-class_sophus_1_1_s_o3_base_1a800885cc57e21fae906d804fb4cdcdee>`> ;
		using :target:`Transformation<doxid-class_sophus_1_1_s_o3_base_1a8d2fd775bd72adae8d49260472bb61f9>` = :ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, :ref:`N<doxid-class_sophus_1_1_s_o3_base_1ab80bb53a6a6dd721c668ac55e8bffa15>`, :ref:`N<doxid-class_sophus_1_1_s_o3_base_1ab80bb53a6a6dd721c668ac55e8bffa15>`> ;
		using :target:`Point<doxid-class_sophus_1_1_s_o3_base_1a98f1d0d99ec5ac35ec62c95b6597b5d2>` = :ref:`Vector3<doxid-namespace_sophus_1ade8af1bfa6ef21fdd15e6a3a89929be5>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`> ;
		using :target:`HomogeneousPoint<doxid-class_sophus_1_1_s_o3_base_1aa50c4e8c42f22b5ceb63db7ca4622cf3>` = :ref:`Vector4<doxid-namespace_sophus_1a2f54b15372bfd1bb0c34464ad61a77c6>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`> ;
		using :target:`Line<doxid-class_sophus_1_1_s_o3_base_1ac33b4d01a69f84674a2af68fdceeff9e>` = :ref:`ParametrizedLine3<doxid-namespace_sophus_1a24633b90a69ca83ad90d833e11e59dd9>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`> ;
		using :target:`Hyperplane<doxid-class_sophus_1_1_s_o3_base_1af0c5877c5377724f6257f9f9c8672550>` = :ref:`Hyperplane3<doxid-namespace_sophus_1ab084f0123710bbef2c90302d40497a74>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`> ;
		using :target:`Tangent<doxid-class_sophus_1_1_s_o3_base_1ab16109010b18d52c553fe0909f1a7530>` = :ref:`Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, :ref:`DoF<doxid-class_sophus_1_1_s_o3_base_1af7f4a85af50fbb862737c1bae89cb285>`> ;
		using :target:`Adjoint<doxid-class_sophus_1_1_s_o3_base_1a07e4ff988dceea1f643244552269c834>` = :ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, :ref:`DoF<doxid-class_sophus_1_1_s_o3_base_1af7f4a85af50fbb862737c1bae89cb285>`, :ref:`DoF<doxid-class_sophus_1_1_s_o3_base_1af7f4a85af50fbb862737c1bae89cb285>`> ;
		using :ref:`ReturnScalar<doxid-class_sophus_1_1_s_o3_base_1a81d8f3c186636e7e58ebf2b1a113afac>` = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, typename OtherDerived::Scalar>::ReturnType ;
		using :target:`SO3Product<doxid-class_sophus_1_1_s_o3_base_1a5bca51745ccef1fd653ccf3491ef4c90>` = :ref:`SO3<doxid-class_sophus_1_1_s_o3>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_s_o3_base_1a81d8f3c186636e7e58ebf2b1a113afac>`<OtherDerived>> ;
		using :target:`PointProduct<doxid-class_sophus_1_1_s_o3_base_1a8b6849dd7d9d7e206bdd7755e74089e1>` = :ref:`Vector3<doxid-namespace_sophus_1ade8af1bfa6ef21fdd15e6a3a89929be5>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_s_o3_base_1a81d8f3c186636e7e58ebf2b1a113afac>`<PointDerived>> ;
		using :target:`HomogeneousPointProduct<doxid-class_sophus_1_1_s_o3_base_1acd6a80849832562af149a0a2853ef027>` = :ref:`Vector4<doxid-namespace_sophus_1a2f54b15372bfd1bb0c34464ad61a77c6>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_s_o3_base_1a81d8f3c186636e7e58ebf2b1a113afac>`<HPointDerived>> ;

		// structs
	
		struct :ref:`TangentAndTheta<doxid-struct_sophus_1_1_s_o3_base_1_1_tangent_and_theta>`;

		// fields
	
		static constexpr int :target:`Options<doxid-class_sophus_1_1_s_o3_base_1a800885cc57e21fae906d804fb4cdcdee>` = Eigen::internal::traits<Derived>::Options;
		static constexpr int :ref:`DoF<doxid-class_sophus_1_1_s_o3_base_1af7f4a85af50fbb862737c1bae89cb285>` = 3;
		static constexpr int :ref:`num_parameters<doxid-class_sophus_1_1_s_o3_base_1adcced501092a9e6652ea9998b179f860>` = 4;
		static constexpr int :ref:`N<doxid-class_sophus_1_1_s_o3_base_1ab80bb53a6a6dd721c668ac55e8bffa15>` = 3;

		// methods
	
		:ref:`Adjoint<doxid-class_sophus_1_1_s_o3_base_1a07e4ff988dceea1f643244552269c834>` :ref:`Adj<doxid-class_sophus_1_1_s_o3_base_1afd413eb1f40fb096ddbd8073764205e6>`() const;
	
		template <class S = Scalar>
		:ref:`enable_if_t<doxid-namespace_sophus_1a4424dd9c3553f3bb3137e735d8c9d406>`<std::is_floating_point<S>::value, S> :ref:`angleX<doxid-class_sophus_1_1_s_o3_base_1a7894fd88017b24f556d881b1e9b44f8f>`() const;
	
		template <class S = Scalar>
		:ref:`enable_if_t<doxid-namespace_sophus_1a4424dd9c3553f3bb3137e735d8c9d406>`<std::is_floating_point<S>::value, S> :ref:`angleY<doxid-class_sophus_1_1_s_o3_base_1a3cea0ba21882885ea4368c9215fad313>`() const;
	
		template <class S = Scalar>
		:ref:`enable_if_t<doxid-namespace_sophus_1a4424dd9c3553f3bb3137e735d8c9d406>`<std::is_floating_point<S>::value, S> :ref:`angleZ<doxid-class_sophus_1_1_s_o3_base_1add7830f3e488a728175a43aedef3e9e9>`() const;
	
		template <class NewScalarType>
		:ref:`SO3<doxid-class_sophus_1_1_s_o3>`<NewScalarType> :ref:`cast<doxid-class_sophus_1_1_s_o3_base_1a9e36fd6f88db979025140902a46bd4be>`() const;
	
		:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`* :ref:`data<doxid-class_sophus_1_1_s_o3_base_1a947393dc983df54f9b9085bbd4d78b26>`();
		:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>` const* :ref:`data<doxid-class_sophus_1_1_s_o3_base_1a1bd5623f64eb01f75e5484cc84046d12>`() const;
		:ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, :ref:`num_parameters<doxid-class_sophus_1_1_s_o3_base_1adcced501092a9e6652ea9998b179f860>`, :ref:`DoF<doxid-class_sophus_1_1_s_o3_base_1af7f4a85af50fbb862737c1bae89cb285>`> :ref:`Dx_this_mul_exp_x_at_0<doxid-class_sophus_1_1_s_o3_base_1a1c2ff1ac40f4f15c62fef4a04377c40f>`() const;
		:ref:`Sophus::Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, :ref:`num_parameters<doxid-class_sophus_1_1_s_o3_base_1adcced501092a9e6652ea9998b179f860>`> :ref:`params<doxid-class_sophus_1_1_s_o3_base_1a2739a6ff4d2f97b6c08cb7e2aa962ffd>`() const;
		:ref:`SO3<doxid-class_sophus_1_1_s_o3>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`> :ref:`inverse<doxid-class_sophus_1_1_s_o3_base_1a80b4d61873aca0991a0f79cd01782ff2>`() const;
		:ref:`Tangent<doxid-class_sophus_1_1_s_o3_base_1ab16109010b18d52c553fe0909f1a7530>` :ref:`log<doxid-class_sophus_1_1_s_o3_base_1aee3b6eb8bfd3faf804fdcaef264cfcd8>`() const;
		:ref:`TangentAndTheta<doxid-struct_sophus_1_1_s_o3_base_1_1_tangent_and_theta>` :ref:`logAndTheta<doxid-class_sophus_1_1_s_o3_base_1aa469f86e4fa69ba64d863d57fee19402>`() const;
		void :ref:`normalize<doxid-class_sophus_1_1_s_o3_base_1a7b2e7d6dbc83b62e4700e50fb506acd7>`();
		:ref:`Transformation<doxid-class_sophus_1_1_s_o3_base_1a8d2fd775bd72adae8d49260472bb61f9>` :ref:`matrix<doxid-class_sophus_1_1_s_o3_base_1a3faa26f30e00b21aff0ae008112b4c70>`() const;
	
		template <class OtherDerived>
		SO3Base<Derived>& :ref:`operator=<doxid-class_sophus_1_1_s_o3_base_1a627cfe179f201fba569be241857609d8>`(SO3Base<OtherDerived> const& other);
	
		template <typename OtherDerived>
		:ref:`SO3Product<doxid-class_sophus_1_1_s_o3_base_1a5bca51745ccef1fd653ccf3491ef4c90>`<OtherDerived> :ref:`operator*<doxid-class_sophus_1_1_s_o3_base_1a5c7a42c7f7e75e586b7f40817c7f62bc>`(SO3Base<OtherDerived> const& other) const;
	
		template <
			typename PointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 3>::value>::type
			>
		:ref:`PointProduct<doxid-class_sophus_1_1_s_o3_base_1a8b6849dd7d9d7e206bdd7755e74089e1>`<PointDerived> :ref:`operator*<doxid-class_sophus_1_1_s_o3_base_1a2c73e4c4bb7de3e096956e03d71bb662>`(Eigen::MatrixBase<PointDerived> const& p) const;
	
		template <
			typename HPointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 4>::value>::type
			>
		:ref:`HomogeneousPointProduct<doxid-class_sophus_1_1_s_o3_base_1acd6a80849832562af149a0a2853ef027>`<HPointDerived> :ref:`operator*<doxid-class_sophus_1_1_s_o3_base_1ab9b2231184c2771d14f0d57540e7868a>`(Eigen::MatrixBase<HPointDerived> const& p) const;
	
		:ref:`Line<doxid-class_sophus_1_1_s_o3_base_1ac33b4d01a69f84674a2af68fdceeff9e>` :ref:`operator*<doxid-class_sophus_1_1_s_o3_base_1ac739d1e389dfe0d5878e07c0d8b85aab>`(:ref:`Line<doxid-class_sophus_1_1_s_o3_base_1ac33b4d01a69f84674a2af68fdceeff9e>` const& l) const;
		:ref:`Hyperplane<doxid-class_sophus_1_1_s_o3_base_1af0c5877c5377724f6257f9f9c8672550>` :ref:`operator*<doxid-class_sophus_1_1_s_o3_base_1aadb06d0604881aaec9305ec4e25b1cbf>`(:ref:`Hyperplane<doxid-class_sophus_1_1_s_o3_base_1af0c5877c5377724f6257f9f9c8672550>` const& p) const;
	
		template <
			typename OtherDerived,
			typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
			>
		SO3Base<Derived>& :ref:`operator*=<doxid-class_sophus_1_1_s_o3_base_1a2014d2ddcdf751914f17ba4eb80be115>`(SO3Base<OtherDerived> const& other);
	
		void :ref:`setQuaternion<doxid-class_sophus_1_1_s_o3_base_1a25cac542342b6f4215e8eedb9c51b0ed>`(Eigen::Quaternion<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`> const& quaternion);
		:ref:`QuaternionType<doxid-class_sophus_1_1_s_o3_base_1a1e370b275fb63d7c870f2d186a501689>` const& :ref:`unit_quaternion<doxid-class_sophus_1_1_s_o3_base_1a6353aab1a8c265a681c9a0035b90dcfd>`() const;
	};

	// direct descendants

	template <class Scalar_, int Options>
	class :ref:`Map<Sophus::SO3<Scalar_> const, Options><doxid-class_eigen_1_1_map_3_01_sophus_1_1_s_o3_3_01_scalar___01_4_01const_00_01_options_01_4>`;

	template <class Scalar_, int Options>
	class :ref:`Map<Sophus::SO3<Scalar_>, Options><doxid-class_eigen_1_1_map_3_01_sophus_1_1_s_o3_3_01_scalar___01_4_00_01_options_01_4>`;
.. _details-class_sophus_1_1_s_o3_base:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`SO3 <doxid-class_sophus_1_1_s_o3>` base type - implements :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` class but is storage agnostic.

SO(3) is the group of rotations in 3d. As a matrix group, it is the set of matrices which are orthogonal such that ``R * R' = I`` (with ``R'`` being the transpose of ``R``) and have a positive determinant. In particular, the determinant is 1. Internally, the group is represented as a unit quaternion. Unit quaternion can be seen as members of the special unitary group SU(2). SU(2) is a double cover of SO(3). Hence, for every rotation matrix ``R``, there exist two unit quaternions: ``(r, v)`` and ``(-r, -v)``, with ``r`` the real part and ``v`` being the imaginary 3-vector part of the quaternion.

SO(3) is a compact, but non-commutative group. First it is compact since the set of rotation matrices is a closed and bounded set. Second it is non-commutative since the equation ``R_1 * R_2 = R_2 * R_1`` does not hold in general. For example rotating an object by some degrees about its ``x`` -axis and then by some degrees about its y axis, does not lead to the same orientation when rotation first about ``y`` and then about ``x``.

Class invariant: The 2-norm of ``unit_quaternion`` must be close to 1. Technically speaking, it must hold that:

``|unit_quaternion().:ref:`squaredNorm() <doxid-namespace_sophus_1aceb4e371d61285afa207cdbd705242f1>` - 1| <= :ref:`Constants::epsilon() <doxid-struct_sophus_1_1_constants_1ac5316f138cd8a1ecead291582717d9e1>```.

Typedefs
--------

.. index:: pair: typedef; ReturnScalar
.. _doxid-class_sophus_1_1_s_o3_base_1a81d8f3c186636e7e58ebf2b1a113afac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	using ReturnScalar = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, typename OtherDerived::Scalar>::ReturnType 

For binary operations the return type is determined with the ScalarBinaryOpTraits feature of :ref:`Eigen <doxid-namespace_eigen>`. This allows mixing concrete and Map types, as well as other compatible scalar types such as Ceres::Jet and double scalars with :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` operations.

Fields
------

.. index:: pair: variable; DoF
.. _doxid-class_sophus_1_1_s_o3_base_1af7f4a85af50fbb862737c1bae89cb285:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int DoF = 3

Degrees of freedom of group, number of dimensions in tangent space.

.. index:: pair: variable; num_parameters
.. _doxid-class_sophus_1_1_s_o3_base_1adcced501092a9e6652ea9998b179f860:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int num_parameters = 4

Number of internal parameters used (quaternion is a 4-tuple).

.. index:: pair: variable; N
.. _doxid-class_sophus_1_1_s_o3_base_1ab80bb53a6a6dd721c668ac55e8bffa15:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int N = 3

Group transformations are 3x3 matrices.

Methods
-------

.. index:: pair: function; Adj
.. _doxid-class_sophus_1_1_s_o3_base_1afd413eb1f40fb096ddbd8073764205e6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Adjoint<doxid-class_sophus_1_1_s_o3_base_1a07e4ff988dceea1f643244552269c834>` Adj() const

Adjoint transformation.

This function return the adjoint transformation ``Ad`` of the group element ``A`` such that for all ``x`` it holds that ``hat(Ad_A * x) = A * hat(x) A^{-1}``. See hat-operator below. For SO(3), it simply returns the rotation matrix corresponding to ``A``.

.. index:: pair: function; angleX
.. _doxid-class_sophus_1_1_s_o3_base_1a7894fd88017b24f556d881b1e9b44f8f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class S = Scalar>
	:ref:`enable_if_t<doxid-namespace_sophus_1a4424dd9c3553f3bb3137e735d8c9d406>`<std::is_floating_point<S>::value, S> angleX() const

Extract rotation angle about canonical X-axis.

.. index:: pair: function; angleY
.. _doxid-class_sophus_1_1_s_o3_base_1a3cea0ba21882885ea4368c9215fad313:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class S = Scalar>
	:ref:`enable_if_t<doxid-namespace_sophus_1a4424dd9c3553f3bb3137e735d8c9d406>`<std::is_floating_point<S>::value, S> angleY() const

Extract rotation angle about canonical Y-axis.

.. index:: pair: function; angleZ
.. _doxid-class_sophus_1_1_s_o3_base_1add7830f3e488a728175a43aedef3e9e9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class S = Scalar>
	:ref:`enable_if_t<doxid-namespace_sophus_1a4424dd9c3553f3bb3137e735d8c9d406>`<std::is_floating_point<S>::value, S> angleZ() const

Extract rotation angle about canonical Z-axis.

.. index:: pair: function; cast
.. _doxid-class_sophus_1_1_s_o3_base_1a9e36fd6f88db979025140902a46bd4be:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class NewScalarType>
	:ref:`SO3<doxid-class_sophus_1_1_s_o3>`<NewScalarType> cast() const

Returns copy of instance casted to NewScalarType.

.. index:: pair: function; data
.. _doxid-class_sophus_1_1_s_o3_base_1a947393dc983df54f9b9085bbd4d78b26:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`* data()

This provides unsafe read/write access to internal data. SO(3) is represented by an Eigen::Quaternion (four parameters). When using direct write access, the user needs to take care of that the quaternion stays normalized.

Note: The first three Scalars represent the imaginary parts, while the forth Scalar represent the real part.

.. index:: pair: function; data
.. _doxid-class_sophus_1_1_s_o3_base_1a1bd5623f64eb01f75e5484cc84046d12:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>` const* data() const

Const version of :ref:`data() <doxid-class_sophus_1_1_s_o3_base_1a947393dc983df54f9b9085bbd4d78b26>` above.

.. index:: pair: function; Dx_this_mul_exp_x_at_0
.. _doxid-class_sophus_1_1_s_o3_base_1a1c2ff1ac40f4f15c62fef4a04377c40f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, :ref:`num_parameters<doxid-class_sophus_1_1_s_o3_base_1adcced501092a9e6652ea9998b179f860>`, :ref:`DoF<doxid-class_sophus_1_1_s_o3_base_1af7f4a85af50fbb862737c1bae89cb285>`> Dx_this_mul_exp_x_at_0() const

Returns derivative of this \* SO3::exp(x) wrt. x at x=0.

.. index:: pair: function; params
.. _doxid-class_sophus_1_1_s_o3_base_1a2739a6ff4d2f97b6c08cb7e2aa962ffd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Sophus::Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`, :ref:`num_parameters<doxid-class_sophus_1_1_s_o3_base_1adcced501092a9e6652ea9998b179f860>`> params() const

Returns internal parameters of SO(3).

It returns (q.imag[0], q.imag[1], q.imag[2], q.real), with q being the unit quaternion.

.. index:: pair: function; inverse
.. _doxid-class_sophus_1_1_s_o3_base_1a80b4d61873aca0991a0f79cd01782ff2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SO3<doxid-class_sophus_1_1_s_o3>`<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`> inverse() const

Returns group inverse.

.. index:: pair: function; log
.. _doxid-class_sophus_1_1_s_o3_base_1aee3b6eb8bfd3faf804fdcaef264cfcd8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Tangent<doxid-class_sophus_1_1_s_o3_base_1ab16109010b18d52c553fe0909f1a7530>` log() const

Logarithmic map.

Computes the logarithm, the inverse of the group exponential which maps element of the group (rotation matrices) to elements of the tangent space (rotation-vector).

To be specific, this function computes ``vee(logmat(.))`` with ``logmat(.)`` being the matrix logarithm and ``vee(.)`` the vee-operator of SO(3).

.. index:: pair: function; logAndTheta
.. _doxid-class_sophus_1_1_s_o3_base_1aa469f86e4fa69ba64d863d57fee19402:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TangentAndTheta<doxid-struct_sophus_1_1_s_o3_base_1_1_tangent_and_theta>` logAndTheta() const

As above, but also returns ``theta = |omega|``.

.. index:: pair: function; normalize
.. _doxid-class_sophus_1_1_s_o3_base_1a7b2e7d6dbc83b62e4700e50fb506acd7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void normalize()

It re-normalizes ``unit_quaternion`` to unit length.

Note: Because of the class invariant, there is typically no need to call this function directly.

.. index:: pair: function; matrix
.. _doxid-class_sophus_1_1_s_o3_base_1a3faa26f30e00b21aff0ae008112b4c70:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Transformation<doxid-class_sophus_1_1_s_o3_base_1a8d2fd775bd72adae8d49260472bb61f9>` matrix() const

Returns 3x3 matrix representation of the instance.

For SO(3), the matrix representation is an orthogonal matrix ``R`` with ``det(R)=1``, thus the so-called "rotation matrix".

.. index:: pair: function; operator=
.. _doxid-class_sophus_1_1_s_o3_base_1a627cfe179f201fba569be241857609d8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class OtherDerived>
	SO3Base<Derived>& operator=(SO3Base<OtherDerived> const& other)

Assignment-like operator from OtherDerived.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_o3_base_1a5c7a42c7f7e75e586b7f40817c7f62bc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename OtherDerived>
	:ref:`SO3Product<doxid-class_sophus_1_1_s_o3_base_1a5bca51745ccef1fd653ccf3491ef4c90>`<OtherDerived> operator*(SO3Base<OtherDerived> const& other) const

Group multiplication, which is rotation concatenation.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_o3_base_1a2c73e4c4bb7de3e096956e03d71bb662:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename PointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 3>::value>::type
		>
	:ref:`PointProduct<doxid-class_sophus_1_1_s_o3_base_1a8b6849dd7d9d7e206bdd7755e74089e1>`<PointDerived> operator*(Eigen::MatrixBase<PointDerived> const& p) const

Group action on 3-points.

This function rotates a 3 dimensional point ``p`` by the :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` element ``bar_R_foo`` (= rotation matrix): ``p_bar = bar_R_foo * p_foo``.

Since :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` is internally represented by a unit quaternion ``q``, it is implemented as ``p_bar = q * p_foo * q^{*}`` with ``q^{*}`` being the quaternion conjugate of ``q``.

Geometrically, ``p`` is rotated by angle ``|omega|`` around the axis ``omega/|omega|`` with ``omega := vee(log(bar_R_foo))``.

For ``vee`` -operator, see below.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_o3_base_1ab9b2231184c2771d14f0d57540e7868a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename HPointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 4>::value>::type
		>
	:ref:`HomogeneousPointProduct<doxid-class_sophus_1_1_s_o3_base_1acd6a80849832562af149a0a2853ef027>`<HPointDerived> operator*(Eigen::MatrixBase<HPointDerived> const& p) const

Group action on homogeneous 3-points. See above for more details.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_o3_base_1ac739d1e389dfe0d5878e07c0d8b85aab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Line<doxid-class_sophus_1_1_s_o3_base_1ac33b4d01a69f84674a2af68fdceeff9e>` operator*(:ref:`Line<doxid-class_sophus_1_1_s_o3_base_1ac33b4d01a69f84674a2af68fdceeff9e>` const& l) const

Group action on lines.

This function rotates a parametrized line ``l(t) = o + t * d`` by the :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` element:

Both direction ``d`` and origin ``o`` are rotated as a 3 dimensional point

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_s_o3_base_1aadb06d0604881aaec9305ec4e25b1cbf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Hyperplane<doxid-class_sophus_1_1_s_o3_base_1af0c5877c5377724f6257f9f9c8672550>` operator*(:ref:`Hyperplane<doxid-class_sophus_1_1_s_o3_base_1af0c5877c5377724f6257f9f9c8672550>` const& p) const

Group action on planes.

This function rotates a plane ``n.x + d = 0`` by the :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` element:

Normal vector ``n`` is rotated Offset ``d`` is left unchanged

.. index:: pair: function; operator*=
.. _doxid-class_sophus_1_1_s_o3_base_1a2014d2ddcdf751914f17ba4eb80be115:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename OtherDerived,
		typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
		>
	SO3Base<Derived>& operator*=(SO3Base<OtherDerived> const& other)

In-place group multiplication. This method is only valid if the return type of the multiplication is compatible with this :ref:`SO3 <doxid-class_sophus_1_1_s_o3>` 's Scalar type.

.. index:: pair: function; setQuaternion
.. _doxid-class_sophus_1_1_s_o3_base_1a25cac542342b6f4215e8eedb9c51b0ed:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setQuaternion(Eigen::Quaternion<:ref:`Scalar<doxid-class_sophus_1_1_s_o3_base_1a9278bd344193c917f5cbf3c91bea3d2c>`> const& quaternion)

Takes in quaternion, and normalizes it.

Precondition: The quaternion must not be close to zero.

.. index:: pair: function; unit_quaternion
.. _doxid-class_sophus_1_1_s_o3_base_1a6353aab1a8c265a681c9a0035b90dcfd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`QuaternionType<doxid-class_sophus_1_1_s_o3_base_1a1e370b275fb63d7c870f2d186a501689>` const& unit_quaternion() const

Accessor of unit quaternion.

