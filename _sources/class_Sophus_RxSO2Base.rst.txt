.. index:: pair: class; Sophus::RxSO2Base
.. _doxid-class_sophus_1_1_rx_s_o2_base:

template class Sophus::RxSO2Base
================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

:ref:`RxSO2 <doxid-class_sophus_1_1_rx_s_o2>` base type - implements :ref:`RxSO2 <doxid-class_sophus_1_1_rx_s_o2>` class but is storage agnostic. :ref:`More...<details-class_sophus_1_1_rx_s_o2_base>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <rxso2.hpp>
	
	template <class Derived>
	class RxSO2Base {
	public:
		// typedefs
	
		using :target:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` = typename Eigen::internal::traits<Derived>:::ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` ;
		using :target:`ComplexType<doxid-class_sophus_1_1_rx_s_o2_base_1a18f719add5e5af8c9c07ec21c6df4751>` = typename Eigen::internal::traits<Derived>:::ref:`ComplexType<doxid-class_sophus_1_1_rx_s_o2_base_1a18f719add5e5af8c9c07ec21c6df4751>` ;
		using :target:`ComplexTemporaryType<doxid-class_sophus_1_1_rx_s_o2_base_1a62ed2f7e7c7c185896fa8563345eb2c3>` = :ref:`Sophus::Vector2<doxid-namespace_sophus_1a7001ffa27892dccbccf195cf679631de>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, :ref:`Options<doxid-class_sophus_1_1_rx_s_o2_base_1a98ae0cb089d98a91c3e20e18ca6f48b1>`> ;
		using :target:`Transformation<doxid-class_sophus_1_1_rx_s_o2_base_1a0bff931fe85659491395508ef1317a53>` = :ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, :ref:`N<doxid-class_sophus_1_1_rx_s_o2_base_1a552179627c9a84f8455b3c3fff18afb5>`, :ref:`N<doxid-class_sophus_1_1_rx_s_o2_base_1a552179627c9a84f8455b3c3fff18afb5>`> ;
		using :target:`Point<doxid-class_sophus_1_1_rx_s_o2_base_1a2b1617d8a3d0fb349ab2564b9ec9a179>` = :ref:`Vector2<doxid-namespace_sophus_1a7001ffa27892dccbccf195cf679631de>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> ;
		using :target:`HomogeneousPoint<doxid-class_sophus_1_1_rx_s_o2_base_1a5fdb1dea7af1c903228ee287db45c923>` = :ref:`Vector3<doxid-namespace_sophus_1ade8af1bfa6ef21fdd15e6a3a89929be5>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> ;
		using :target:`Line<doxid-class_sophus_1_1_rx_s_o2_base_1a0e76a006e490cbe972de1be845eded45>` = :ref:`ParametrizedLine2<doxid-namespace_sophus_1aa20aa616d9b174374faa3eafc34a5d29>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> ;
		using :target:`Hyperplane<doxid-class_sophus_1_1_rx_s_o2_base_1a89e2030c26986bb839f68c698875457e>` = :ref:`Hyperplane2<doxid-namespace_sophus_1ac81be7a8549f8288c09a142c5c206faa>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> ;
		using :target:`Tangent<doxid-class_sophus_1_1_rx_s_o2_base_1a39f175916fac8ba5b75805cae7a504cf>` = :ref:`Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, :ref:`DoF<doxid-class_sophus_1_1_rx_s_o2_base_1a4160a7d353c7b1769d399fa17baa0e57>`> ;
		using :target:`Adjoint<doxid-class_sophus_1_1_rx_s_o2_base_1a07822c1d71d603e7f397d9a04feeb02f>` = :ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, :ref:`DoF<doxid-class_sophus_1_1_rx_s_o2_base_1a4160a7d353c7b1769d399fa17baa0e57>`, :ref:`DoF<doxid-class_sophus_1_1_rx_s_o2_base_1a4160a7d353c7b1769d399fa17baa0e57>`> ;
		using :ref:`ReturnScalar<doxid-class_sophus_1_1_rx_s_o2_base_1ae0b0c5b25617870c8d12ac71f9895cbb>` = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, typename OtherDerived::Scalar>::ReturnType ;
		using :target:`RxSO2Product<doxid-class_sophus_1_1_rx_s_o2_base_1a67b8f74b2e2e5c0954cd3fefe87b473a>` = :ref:`RxSO2<doxid-class_sophus_1_1_rx_s_o2>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_rx_s_o2_base_1ae0b0c5b25617870c8d12ac71f9895cbb>`<OtherDerived>> ;
		using :target:`PointProduct<doxid-class_sophus_1_1_rx_s_o2_base_1a3c477808130e14686ae9912d810e8dde>` = :ref:`Vector2<doxid-namespace_sophus_1a7001ffa27892dccbccf195cf679631de>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_rx_s_o2_base_1ae0b0c5b25617870c8d12ac71f9895cbb>`<PointDerived>> ;
		using :target:`HomogeneousPointProduct<doxid-class_sophus_1_1_rx_s_o2_base_1ade1429b27d1908535e4b79bcb6c59f3e>` = :ref:`Vector3<doxid-namespace_sophus_1ade8af1bfa6ef21fdd15e6a3a89929be5>`<:ref:`ReturnScalar<doxid-class_sophus_1_1_rx_s_o2_base_1ae0b0c5b25617870c8d12ac71f9895cbb>`<HPointDerived>> ;

		// fields
	
		static constexpr int :target:`Options<doxid-class_sophus_1_1_rx_s_o2_base_1a98ae0cb089d98a91c3e20e18ca6f48b1>` = Eigen::internal::traits<Derived>::Options;
		static constexpr int :ref:`DoF<doxid-class_sophus_1_1_rx_s_o2_base_1a4160a7d353c7b1769d399fa17baa0e57>` = 2;
		static constexpr int :ref:`num_parameters<doxid-class_sophus_1_1_rx_s_o2_base_1a26630d82ba9db2b7a5cf6904beaf7780>` = 2;
		static constexpr int :ref:`N<doxid-class_sophus_1_1_rx_s_o2_base_1a552179627c9a84f8455b3c3fff18afb5>` = 2;

		// methods
	
		:ref:`Adjoint<doxid-class_sophus_1_1_rx_s_o2_base_1a07822c1d71d603e7f397d9a04feeb02f>` :ref:`Adj<doxid-class_sophus_1_1_rx_s_o2_base_1a22869af2452c65cd8a54ee5fe3187acf>`() const;
		:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` :ref:`angle<doxid-class_sophus_1_1_rx_s_o2_base_1ad597602a09b12ce0e7aad9578f4f1564>`() const;
	
		template <class NewScalarType>
		:ref:`RxSO2<doxid-class_sophus_1_1_rx_s_o2>`<NewScalarType> :ref:`cast<doxid-class_sophus_1_1_rx_s_o2_base_1a9ba6f118aa9849ee2358445105878b5c>`() const;
	
		:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`* :ref:`data<doxid-class_sophus_1_1_rx_s_o2_base_1a077520c15cf347d183e7f9b125e1e268>`();
		:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` const* :ref:`data<doxid-class_sophus_1_1_rx_s_o2_base_1a117e3ac235e412f594fdff6b005a31e8>`() const;
		:ref:`RxSO2<doxid-class_sophus_1_1_rx_s_o2>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> :ref:`inverse<doxid-class_sophus_1_1_rx_s_o2_base_1a78106c365b4b97b7d886d0b596be1383>`() const;
		:ref:`Tangent<doxid-class_sophus_1_1_rx_s_o2_base_1a39f175916fac8ba5b75805cae7a504cf>` :ref:`log<doxid-class_sophus_1_1_rx_s_o2_base_1ac221192f3082617f2da048245fed8e36>`() const;
		:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o2_base_1a0bff931fe85659491395508ef1317a53>` :ref:`matrix<doxid-class_sophus_1_1_rx_s_o2_base_1a7d460c43da77e9cc81f3d85ce29a5d24>`() const;
	
		template <class OtherDerived>
		RxSO2Base<Derived>& :ref:`operator=<doxid-class_sophus_1_1_rx_s_o2_base_1a3c9a6c9a9a03c91772ee78489d8437f5>`(RxSO2Base<OtherDerived> const& other);
	
		template <typename OtherDerived>
		:ref:`RxSO2Product<doxid-class_sophus_1_1_rx_s_o2_base_1a67b8f74b2e2e5c0954cd3fefe87b473a>`<OtherDerived> :ref:`operator*<doxid-class_sophus_1_1_rx_s_o2_base_1acfbdff75aa9606d87de9086a2c82a132>`(RxSO2Base<OtherDerived> const& other) const;
	
		template <
			typename PointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 2>::value>::type
			>
		:ref:`PointProduct<doxid-class_sophus_1_1_rx_s_o2_base_1a3c477808130e14686ae9912d810e8dde>`<PointDerived> :ref:`operator*<doxid-class_sophus_1_1_rx_s_o2_base_1acf729963adf0987f0fd8a517e09f9cc8>`(Eigen::MatrixBase<PointDerived> const& p) const;
	
		template <
			typename HPointDerived,
			typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 3>::value>::type
			>
		:ref:`HomogeneousPointProduct<doxid-class_sophus_1_1_rx_s_o2_base_1ade1429b27d1908535e4b79bcb6c59f3e>`<HPointDerived> :ref:`operator*<doxid-class_sophus_1_1_rx_s_o2_base_1ac08e1c0ea4ed9c856e7dd4cbad5ce1fe>`(Eigen::MatrixBase<HPointDerived> const& p) const;
	
		:ref:`Line<doxid-class_sophus_1_1_rx_s_o2_base_1a0e76a006e490cbe972de1be845eded45>` :ref:`operator*<doxid-class_sophus_1_1_rx_s_o2_base_1a4597efe64e22afd09fa9cb62288562dd>`(:ref:`Line<doxid-class_sophus_1_1_rx_s_o2_base_1a0e76a006e490cbe972de1be845eded45>` const& l) const;
		:ref:`Hyperplane<doxid-class_sophus_1_1_rx_s_o2_base_1a89e2030c26986bb839f68c698875457e>` :ref:`operator*<doxid-class_sophus_1_1_rx_s_o2_base_1af2a9aedeb81c32b3b26654a794075318>`(:ref:`Hyperplane<doxid-class_sophus_1_1_rx_s_o2_base_1a89e2030c26986bb839f68c698875457e>` const& p) const;
	
		template <
			typename OtherDerived,
			typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
			>
		RxSO2Base<Derived>& :ref:`operator*=<doxid-class_sophus_1_1_rx_s_o2_base_1adf6097891245d87c57a8faabaa81fd7c>`(RxSO2Base<OtherDerived> const& other);
	
		:ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, :ref:`num_parameters<doxid-class_sophus_1_1_rx_s_o2_base_1a26630d82ba9db2b7a5cf6904beaf7780>`, :ref:`DoF<doxid-class_sophus_1_1_rx_s_o2_base_1a4160a7d353c7b1769d399fa17baa0e57>`> :ref:`Dx_this_mul_exp_x_at_0<doxid-class_sophus_1_1_rx_s_o2_base_1a5c0d70c81529641f7b88b33db5ea1e11>`() const;
		:ref:`Sophus::Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, :ref:`num_parameters<doxid-class_sophus_1_1_rx_s_o2_base_1a26630d82ba9db2b7a5cf6904beaf7780>`> :ref:`params<doxid-class_sophus_1_1_rx_s_o2_base_1ab91f1923244110faf306d769b8861bbc>`() const;
		void :ref:`setComplex<doxid-class_sophus_1_1_rx_s_o2_base_1a93ed761ea403ed0b272b1364fa41b09d>`(:ref:`Vector2<doxid-namespace_sophus_1a7001ffa27892dccbccf195cf679631de>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> const& z);
		:ref:`ComplexType<doxid-class_sophus_1_1_rx_s_o2_base_1a18f719add5e5af8c9c07ec21c6df4751>` const& :ref:`complex<doxid-class_sophus_1_1_rx_s_o2_base_1aac7143f52a89df345136f9d847c18ad5>`() const;
		:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o2_base_1a0bff931fe85659491395508ef1317a53>` :ref:`rotationMatrix<doxid-class_sophus_1_1_rx_s_o2_base_1a1df725b98152325cdbb2f1602646c7a1>`() const;
		:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` :ref:`scale<doxid-class_sophus_1_1_rx_s_o2_base_1a19f2ec354424ded359e1a9dcc0ceb8a3>`() const;
		void :ref:`setAngle<doxid-class_sophus_1_1_rx_s_o2_base_1a7f61f63e0789ec6ca1ce8b80054a72d5>`(:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` const& theta);
		void :ref:`setRotationMatrix<doxid-class_sophus_1_1_rx_s_o2_base_1ae8d6a329c095aa9a0954a9803a6b3324>`(:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o2_base_1a0bff931fe85659491395508ef1317a53>` const& R);
		void :ref:`setScale<doxid-class_sophus_1_1_rx_s_o2_base_1aa23d58dff649ea6cccd28a38a7c4ec66>`(:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` const& scale);
		void :ref:`setScaledRotationMatrix<doxid-class_sophus_1_1_rx_s_o2_base_1a6691f798f38c2d881e43326d729ed163>`(:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o2_base_1a0bff931fe85659491395508ef1317a53>` const& sR);
		void :ref:`setSO2<doxid-class_sophus_1_1_rx_s_o2_base_1a1a8a73376aa49a6e896b6cc5d7bd4486>`(:ref:`SO2<doxid-class_sophus_1_1_s_o2>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> const& so2);
		:ref:`SO2<doxid-class_sophus_1_1_s_o2>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> :target:`so2<doxid-class_sophus_1_1_rx_s_o2_base_1a009522eb6d349f4beb7926265ffdb08a>`() const;
	};

	// direct descendants

	template <class Scalar_, int Options>
	class :ref:`Map<Sophus::RxSO2<Scalar_> const, Options><doxid-class_eigen_1_1_map_3_01_sophus_1_1_rx_s_o2_3_01_scalar___01_4_01const_00_01_options_01_4>`;

	template <class Scalar_, int Options>
	class :ref:`Map<Sophus::RxSO2<Scalar_>, Options><doxid-class_eigen_1_1_map_3_01_sophus_1_1_rx_s_o2_3_01_scalar___01_4_00_01_options_01_4>`;
.. _details-class_sophus_1_1_rx_s_o2_base:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`RxSO2 <doxid-class_sophus_1_1_rx_s_o2>` base type - implements :ref:`RxSO2 <doxid-class_sophus_1_1_rx_s_o2>` class but is storage agnostic.

This class implements the group ``R+ x SO(2)``, the direct product of the group of positive scalar 2x2 matrices (= isomorph to the positive real numbers) and the two-dimensional special orthogonal group SO(2). Geometrically, it is the group of rotation and scaling in two dimensions. As a matrix groups, R+ x SO(2) consists of matrices of the form ``s * R`` where ``R`` is an orthogonal matrix with ``det(R) = 1`` and ``s > 0`` being a positive real number. In particular, it has the following form:

.. code-block:: cpp

	| s * cos(theta)  s * -sin(theta) |
	| s * sin(theta)  s *  cos(theta) |

where ``theta`` being the rotation angle. Internally, it is represented by the first column of the rotation matrix, or in other words by a non-zero complex number.

R+ x SO(2) is not compact, but a commutative group. First it is not compact since the scale factor is not bound. Second it is commutative since ``sR(alpha, s1) * sR(beta, s2) = sR(beta, s2) * sR(alpha, s1)``, simply because ``alpha + beta = beta + alpha`` and ``s1 * s2 = s2 * s1`` with ``alpha`` and ``beta`` being rotation angles and ``s1``, ``s2`` being scale factors.

This class has the explicit class invariant that the scale ``s`` is not too close to either zero or infinity. Strictly speaking, it must hold that:

``:ref:`complex() <doxid-class_sophus_1_1_rx_s_o2_base_1aac7143f52a89df345136f9d847c18ad5>`.norm() >= :ref:`Constants::epsilon() <doxid-struct_sophus_1_1_constants_1ac5316f138cd8a1ecead291582717d9e1>``` and ``1. / :ref:`complex() <doxid-class_sophus_1_1_rx_s_o2_base_1aac7143f52a89df345136f9d847c18ad5>`.norm() >= :ref:`Constants::epsilon() <doxid-struct_sophus_1_1_constants_1ac5316f138cd8a1ecead291582717d9e1>```.

In order to obey this condition, group multiplication is implemented with saturation such that a product always has a scale which is equal or greater this threshold.

Typedefs
--------

.. index:: pair: typedef; ReturnScalar
.. _doxid-class_sophus_1_1_rx_s_o2_base_1ae0b0c5b25617870c8d12ac71f9895cbb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	using ReturnScalar = typename Eigen::ScalarBinaryOpTraits<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, typename OtherDerived::Scalar>::ReturnType 

For binary operations the return type is determined with the ScalarBinaryOpTraits feature of :ref:`Eigen <doxid-namespace_eigen>`. This allows mixing concrete and Map types, as well as other compatible scalar types such as Ceres::Jet and double scalars with :ref:`RxSO2 <doxid-class_sophus_1_1_rx_s_o2>` operations.

Fields
------

.. index:: pair: variable; DoF
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a4160a7d353c7b1769d399fa17baa0e57:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int DoF = 2

Degrees of freedom of manifold, number of dimensions in tangent space (one for rotation and one for scaling).

.. index:: pair: variable; num_parameters
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a26630d82ba9db2b7a5cf6904beaf7780:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int num_parameters = 2

Number of internal parameters used (complex number is a tuple).

.. index:: pair: variable; N
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a552179627c9a84f8455b3c3fff18afb5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static constexpr int N = 2

Group transformations are 2x2 matrices.

Methods
-------

.. index:: pair: function; Adj
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a22869af2452c65cd8a54ee5fe3187acf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Adjoint<doxid-class_sophus_1_1_rx_s_o2_base_1a07822c1d71d603e7f397d9a04feeb02f>` Adj() const

Adjoint transformation.

This function return the adjoint transformation ``Ad`` of the group element ``A`` such that for all ``x`` it holds that ``hat(Ad_A * x) = A * hat(x) A^{-1}``. See hat-operator below.

For RxSO(2), it simply returns the identity matrix.

.. index:: pair: function; angle
.. _doxid-class_sophus_1_1_rx_s_o2_base_1ad597602a09b12ce0e7aad9578f4f1564:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` angle() const

Returns rotation angle.

.. index:: pair: function; cast
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a9ba6f118aa9849ee2358445105878b5c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class NewScalarType>
	:ref:`RxSO2<doxid-class_sophus_1_1_rx_s_o2>`<NewScalarType> cast() const

Returns copy of instance casted to NewScalarType.

.. index:: pair: function; data
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a077520c15cf347d183e7f9b125e1e268:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`* data()

This provides unsafe read/write access to internal data. RxSO(2) is represented by a complex number (two parameters). When using direct write access, the user needs to take care of that the complex number is not set close to zero.

Note: The first parameter represents the real part, while the second parameter represent the imaginary part.

.. index:: pair: function; data
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a117e3ac235e412f594fdff6b005a31e8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` const* data() const

Const version of :ref:`data() <doxid-class_sophus_1_1_rx_s_o2_base_1a077520c15cf347d183e7f9b125e1e268>` above.

.. index:: pair: function; inverse
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a78106c365b4b97b7d886d0b596be1383:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`RxSO2<doxid-class_sophus_1_1_rx_s_o2>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> inverse() const

Returns group inverse.

.. index:: pair: function; log
.. _doxid-class_sophus_1_1_rx_s_o2_base_1ac221192f3082617f2da048245fed8e36:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Tangent<doxid-class_sophus_1_1_rx_s_o2_base_1a39f175916fac8ba5b75805cae7a504cf>` log() const

Logarithmic map.

Computes the logarithm, the inverse of the group exponential which maps element of the group (scaled rotation matrices) to elements of the tangent space (rotation-vector plus logarithm of scale factor).

To be specific, this function computes ``vee(logmat(.))`` with ``logmat(.)`` being the matrix logarithm and ``vee(.)`` the vee-operator of :ref:`RxSO2 <doxid-class_sophus_1_1_rx_s_o2>`.

.. index:: pair: function; matrix
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a7d460c43da77e9cc81f3d85ce29a5d24:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o2_base_1a0bff931fe85659491395508ef1317a53>` matrix() const

Returns 2x2 matrix representation of the instance.

For :ref:`RxSO2 <doxid-class_sophus_1_1_rx_s_o2>`, the matrix representation is an scaled orthogonal matrix ``sR`` with ``det(R)=s^2``, thus a scaled rotation matrix ``R`` with scale ``s``.

.. index:: pair: function; operator=
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a3c9a6c9a9a03c91772ee78489d8437f5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <class OtherDerived>
	RxSO2Base<Derived>& operator=(RxSO2Base<OtherDerived> const& other)

Assignment-like operator from OtherDerived.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_rx_s_o2_base_1acfbdff75aa9606d87de9086a2c82a132:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename OtherDerived>
	:ref:`RxSO2Product<doxid-class_sophus_1_1_rx_s_o2_base_1a67b8f74b2e2e5c0954cd3fefe87b473a>`<OtherDerived> operator*(RxSO2Base<OtherDerived> const& other) const

Group multiplication, which is rotation concatenation and scale multiplication.

Note: This function performs saturation for products close to zero in order to ensure the class invariant.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_rx_s_o2_base_1acf729963adf0987f0fd8a517e09f9cc8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename PointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<PointDerived, 2>::value>::type
		>
	:ref:`PointProduct<doxid-class_sophus_1_1_rx_s_o2_base_1a3c477808130e14686ae9912d810e8dde>`<PointDerived> operator*(Eigen::MatrixBase<PointDerived> const& p) const

Group action on 2-points.

This function rotates a 2 dimensional point ``p`` by the :ref:`SO2 <doxid-class_sophus_1_1_s_o2>` element ``bar_R_foo`` (= rotation matrix) and scales it by the scale factor ``s`` :

``p_bar = s * (bar_R_foo * p_foo)``.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_rx_s_o2_base_1ac08e1c0ea4ed9c856e7dd4cbad5ce1fe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename HPointDerived,
		typename = typename std::enable_if<IsFixedSizeVector<HPointDerived, 3>::value>::type
		>
	:ref:`HomogeneousPointProduct<doxid-class_sophus_1_1_rx_s_o2_base_1ade1429b27d1908535e4b79bcb6c59f3e>`<HPointDerived> operator*(Eigen::MatrixBase<HPointDerived> const& p) const

Group action on homogeneous 2-points. See above for more details.

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a4597efe64e22afd09fa9cb62288562dd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Line<doxid-class_sophus_1_1_rx_s_o2_base_1a0e76a006e490cbe972de1be845eded45>` operator*(:ref:`Line<doxid-class_sophus_1_1_rx_s_o2_base_1a0e76a006e490cbe972de1be845eded45>` const& l) const

Group action on lines.

This function rotates a parameterized line ``l(t) = o + t * d`` by the :ref:`SO2 <doxid-class_sophus_1_1_s_o2>` element and scales it by the scale factor

Origin ``o`` is rotated and scaled Direction ``d`` is rotated (preserving it's norm)

.. index:: pair: function; operator*
.. _doxid-class_sophus_1_1_rx_s_o2_base_1af2a9aedeb81c32b3b26654a794075318:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Hyperplane<doxid-class_sophus_1_1_rx_s_o2_base_1a89e2030c26986bb839f68c698875457e>` operator*(:ref:`Hyperplane<doxid-class_sophus_1_1_rx_s_o2_base_1a89e2030c26986bb839f68c698875457e>` const& p) const

Group action on hyper-planes.

This function rotates a hyper-plane ``n.x + d = 0`` by the :ref:`SO2 <doxid-class_sophus_1_1_s_o2>` element and scales offset by the scale factor

Normal vector ``n`` is rotated Offset ``d`` is scaled

Note that in 2d-case hyper-planes are just another parametrization of lines

.. index:: pair: function; operator*=
.. _doxid-class_sophus_1_1_rx_s_o2_base_1adf6097891245d87c57a8faabaa81fd7c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename OtherDerived,
		typename = typename std::enable_if<std::is_same<Scalar, ReturnScalar<OtherDerived>>::value>::type
		>
	RxSO2Base<Derived>& operator*=(RxSO2Base<OtherDerived> const& other)

In-place group multiplication. This method is only valid if the return type of the multiplication is compatible with this :ref:`SO2 <doxid-class_sophus_1_1_s_o2>` 's Scalar type.

Note: This function performs saturation for products close to zero in order to ensure the class invariant.

.. index:: pair: function; Dx_this_mul_exp_x_at_0
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a5c0d70c81529641f7b88b33db5ea1e11:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Matrix<doxid-namespace_sophus_1a6da48bb60b569fdd4619fcd8f5fb2498>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, :ref:`num_parameters<doxid-class_sophus_1_1_rx_s_o2_base_1a26630d82ba9db2b7a5cf6904beaf7780>`, :ref:`DoF<doxid-class_sophus_1_1_rx_s_o2_base_1a4160a7d353c7b1769d399fa17baa0e57>`> Dx_this_mul_exp_x_at_0() const

Returns derivative of this \* RxSO2::exp(x) wrt. x at x=0.

.. index:: pair: function; params
.. _doxid-class_sophus_1_1_rx_s_o2_base_1ab91f1923244110faf306d769b8861bbc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Sophus::Vector<doxid-namespace_sophus_1abf9f6f1b37fa7bef4d2df65d63154cdf>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`, :ref:`num_parameters<doxid-class_sophus_1_1_rx_s_o2_base_1a26630d82ba9db2b7a5cf6904beaf7780>`> params() const

Returns internal parameters of RxSO(2).

It returns (c[0], c[1]), with c being the complex number.

.. index:: pair: function; setComplex
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a93ed761ea403ed0b272b1364fa41b09d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setComplex(:ref:`Vector2<doxid-namespace_sophus_1a7001ffa27892dccbccf195cf679631de>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> const& z)

Sets non-zero complex.

Precondition: ``z`` must not be close to either zero or infinity.

.. index:: pair: function; complex
.. _doxid-class_sophus_1_1_rx_s_o2_base_1aac7143f52a89df345136f9d847c18ad5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`ComplexType<doxid-class_sophus_1_1_rx_s_o2_base_1a18f719add5e5af8c9c07ec21c6df4751>` const& complex() const

Accessor of complex.

.. index:: pair: function; rotationMatrix
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a1df725b98152325cdbb2f1602646c7a1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o2_base_1a0bff931fe85659491395508ef1317a53>` rotationMatrix() const

Returns rotation matrix.

.. index:: pair: function; scale
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a19f2ec354424ded359e1a9dcc0ceb8a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` scale() const

Returns scale.

.. index:: pair: function; setAngle
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a7f61f63e0789ec6ca1ce8b80054a72d5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setAngle(:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` const& theta)

Setter of rotation angle, leaves scale as is.

.. index:: pair: function; setRotationMatrix
.. _doxid-class_sophus_1_1_rx_s_o2_base_1ae8d6a329c095aa9a0954a9803a6b3324:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setRotationMatrix(:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o2_base_1a0bff931fe85659491395508ef1317a53>` const& R)

Setter of complex using rotation matrix ``R``, leaves scale as is.

Precondition: ``R`` must be orthogonal with determinant of one.

.. index:: pair: function; setScale
.. _doxid-class_sophus_1_1_rx_s_o2_base_1aa23d58dff649ea6cccd28a38a7c4ec66:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setScale(:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>` const& scale)

Sets scale and leaves rotation as is.

.. index:: pair: function; setScaledRotationMatrix
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a6691f798f38c2d881e43326d729ed163:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setScaledRotationMatrix(:ref:`Transformation<doxid-class_sophus_1_1_rx_s_o2_base_1a0bff931fe85659491395508ef1317a53>` const& sR)

Setter of complex number using scaled rotation matrix ``sR``.

Precondition: The 2x2 matrix must be "scaled orthogonal" and have a positive determinant.

.. index:: pair: function; setSO2
.. _doxid-class_sophus_1_1_rx_s_o2_base_1a1a8a73376aa49a6e896b6cc5d7bd4486:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void setSO2(:ref:`SO2<doxid-class_sophus_1_1_s_o2>`<:ref:`Scalar<doxid-class_sophus_1_1_rx_s_o2_base_1a5782d21c1c79fecb930ea78b07be1dc3>`> const& so2)

Setter of SO(2) rotations, leaves scale as is.

